{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lusk/Documents/projetos/Series App/SeriesApp/src/components/Forms/FormSerie.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Colors_services from \"../../utils/Colors_layout\";\nimport Size_services from \"../../utils/Size_layout\";\nimport Imagepicker from \"../Image/ImagePicker\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { descriptionSet, genreSet, titleSet } from \"../../store/postslice\";\nimport IntegerInput from \"../Inputs/IntegerInput\";\nimport Warning from \"../utils/Warning\";\nexport default function FormSerie(props) {\n  var error = props.error,\n      error_message = props.error_message;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      genreString = _useState2[0],\n      setGenreString = _useState2[1];\n\n  var title = useSelector(function (state) {\n    return state.post_serie_reducer.title;\n  });\n  var description = useSelector(function (state) {\n    return state.post_serie_reducer.description;\n  });\n\n  var Get_genreList = function Get_genreList() {\n    var genreList = genreString.split(',');\n    dispatch(genreSet({\n      type: 'set',\n      payload: genres_list\n    }));\n  };\n\n  var onChangeTitle = function onChangeTitle(text) {\n    dispatch(titleSet({\n      type: 'set',\n      payload: text\n    }));\n  };\n\n  var onChangeDescription = function onChangeDescription(text) {\n    dispatch(descriptionSet({\n      type: 'set',\n      payload: text\n    }));\n  };\n\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, error ? React.createElement(Warning, {\n    error_message: error_message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }) : null, React.createElement(View, {\n    style: style.view_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Title\"), React.createElement(TextInput, {\n    value: title.payload,\n    onChangeText: function onChangeText(value) {\n      onChangeTitle(value);\n    },\n    multiline: true,\n    style: style.textinput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: style.view_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Note\"), React.createElement(IntegerInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: style.view_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Imagem\"), React.createElement(Imagepicker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: style.view_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Genres\"), React.createElement(TextInput, {\n    value: genreString,\n    onChangeText: function onChangeText(value) {\n      setGenreString(value);\n    },\n    multiline: true,\n    style: style.textinput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: style.view_input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Description\"), React.createElement(TextInput, {\n    value: description.payload,\n    onChangeText: function onChangeText(value) {\n      onChangeDescription(value);\n    },\n    multiline: true,\n    numberOfLines: 4,\n    style: style.textinput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n}\nvar style = StyleSheet.create({\n  container: {\n    flex: 4,\n    justifyContent: 'flex-start',\n    marginBottom: 20\n  },\n  view_input: {\n    flex: 1,\n    padding: 5,\n    justifyContent: 'flex-start'\n  },\n  textinput: {\n    backgroundColor: \"\" + Colors_services.Get_ColorsPack()[\"Cinza_claro\"],\n    padding: 5,\n    borderRadius: 10,\n    minHeight: Size_services.Get_SizePack()[\"layout_form_height\"]\n  },\n  input: {\n    color: \"\" + Colors_services.Get_ColorsPack()[\"Roxo_claro\"],\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/components/Forms/FormSerie.js"],"names":["React","useState","Colors_services","Size_services","Imagepicker","useDispatch","useSelector","descriptionSet","genreSet","titleSet","IntegerInput","Warning","FormSerie","props","error","error_message","genreString","setGenreString","title","state","post_serie_reducer","description","Get_genreList","genreList","split","dispatch","type","payload","genres_list","onChangeTitle","text","onChangeDescription","style","container","view_input","input","value","textinput","StyleSheet","create","flex","justifyContent","marginBottom","padding","backgroundColor","Get_ColorsPack","borderRadius","minHeight","Get_SizePack","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TextInput } from 'react-native';\n\nimport Colors_services from '../../utils/Colors_layout';\nimport Size_services from '../../utils/Size_layout';\nimport Imagepicker from '../Image/ImagePicker';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { descriptionSet, genreSet, titleSet } from '../../store/postslice';\nimport IntegerInput from '../Inputs/IntegerInput';\nimport Warning from '../utils/Warning';\n\nexport default function FormSerie(props){\n    const { error, error_message } = props;\n\n    const [ genreString, setGenreString ] = useState(\"\");\n    // const [ title, setTilt ] = useState(\"\");\n    // const [ description, setDesc ] = useState(\"\");\n\n    const title = useSelector((state) => state.post_serie_reducer.title);\n    const description = useSelector((state) => state.post_serie_reducer.description);\n\n    const Get_genreList = () => {\n        const genreList = genreString.split(',');\n\n        dispatch(genreSet({type:'set', payload:genres_list}));\n    }\n\n    const onChangeTitle = (text) => {\n        dispatch(titleSet({type:'set', payload:text}));\n    }\n\n    const onChangeDescription = (text) => {\n        dispatch(descriptionSet({type:'set', payload:text}));\n    }\n\n    const dispatch = useDispatch();\n\n    return(\n        <View style={style.container}>\n            { error ? <Warning  error_message={error_message}/> : null }\n            <View style={style.view_input}>\n                <Text style={style.input}>Title</Text>\n                <TextInput\n                    value={title.payload}\n                    onChangeText={(value) => { onChangeTitle(value) }}\n                    multiline={true}\n                    style={style.textinput}\n                />\n            </View>\n            <View style={style.view_input}>\n                <Text style={style.input}>Note</Text>\n                <IntegerInput />\n            </View>\n            <View style={style.view_input}>\n                <Text style={style.input}>Imagem</Text>\n                <Imagepicker />\n            </View>\n            <View style={style.view_input}>\n                <Text style={style.input}>Genres</Text>\n                <TextInput\n                    value={genreString}\n                    onChangeText={(value) => {setGenreString(value)}}\n                    multiline={true}\n                    style={style.textinput}\n                />\n            </View>\n            <View style={style.view_input}>\n                <Text style={style.input}>Description</Text>\n                <TextInput\n                    value={description.payload}\n                    onChangeText={(value) => {onChangeDescription(value)}}\n                    multiline={true}\n                    numberOfLines = {4}\n                    style={style.textinput}\n                />\n            </View>\n        </View>\n    )\n}\n\nconst style = StyleSheet.create({\n    container:{\n        flex:4,\n        justifyContent:'flex-start',\n        marginBottom: 20\n    },\n    view_input:{\n        flex:1,\n        padding:5,\n        justifyContent:'flex-start',\n    },\n    textinput:{\n        backgroundColor: `${Colors_services.Get_ColorsPack()[\"Cinza_claro\"]}`,\n        padding:5,\n        borderRadius: 10,\n        minHeight: Size_services.Get_SizePack()[\"layout_form_height\"]\n    },\n    input:{\n        color: `${Colors_services.Get_ColorsPack()[\"Roxo_claro\"]}`,\n        marginBottom: 5\n    }\n})"]},"metadata":{},"sourceType":"module"}