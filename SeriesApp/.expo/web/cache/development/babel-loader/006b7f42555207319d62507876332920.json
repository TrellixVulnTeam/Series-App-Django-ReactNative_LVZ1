{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lusk/Documents/projetos/Series App/SeriesApp/src/components/Image/ImagePicker.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport store from \"../../store/store\";\nimport { useDispatch } from 'react-redux';\nimport * as ImagePicker from 'expo-image-picker';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { imgUrlSet } from \"../../store/postslice\";\nexport default function Imagepicker(props) {\n  var imgUrl = store.getState().post_serie_reducer.imgUrl;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Url = _useState2[0],\n      setUrl = _useState2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [9, 16],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              console.log(result);\n              dispatch(imgUrlSet({\n                type: 'set',\n                payload: {\n                  image: result\n                }\n              }));\n              setUrl(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImageHandler = function pickImageHandler() {\n    pickImage();\n  };\n\n  var reset = function reset() {\n    dispatch(imgUrlSet({\n      type: 'set',\n      payload: {\n        image: \"\"\n      }\n    }));\n    setUrl(\"\");\n  };\n\n  return React.createElement(View, {\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: style.imgView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, Url !== \"\" ? React.createElement(Image, {\n    style: style.imgStyle,\n    source: {\n      uri: Url\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 32\n    }\n  }) : null), React.createElement(View, {\n    style: style.btnContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"pick image\",\n    onPress: function onPress() {\n      return pickImageHandler();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"reset\",\n    onPress: function onPress() {\n      return reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })));\n}\nvar style = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  btnContainer: {\n    marginTop: 10,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  imgView: {\n    flex: 8\n  },\n  imgStyle: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/components/Image/ImagePicker.js"],"names":["React","useEffect","useState","store","useDispatch","ImagePicker","imgUrlSet","Imagepicker","props","imgUrl","getState","post_serie_reducer","Url","setUrl","dispatch","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","console","log","type","payload","image","uri","pickImageHandler","reset","style","container","imgView","imgStyle","btnContainer","StyleSheet","create","flex","marginTop","flexDirection","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;;;;AAUA,SAASC,SAAT;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAEtC,MAAMC,MAAM,GAAGN,KAAK,CAACO,QAAN,GAAiBC,kBAAjB,CAAoCF,MAAnD;;AACA,kBAAwBP,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAQU,GAAR;AAAA,MAAaC,MAAb;;AACA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAGAH,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACGc,QAAQ,CAACC,EAAT,KAAgB,KADnB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAE4BX,WAAW,CAACY,mCAAZ,EAF5B;;AAAA;AAAA;AAEWC,cAAAA,MAFX,yBAEWA,MAFX;;AAGG,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACtBC,gBAAAA,KAAK,CAAC,2DAAD,CAAL;AACH;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKf,WAAW,CAACgB,uBAAZ,CAAoC;AACvDC,cAAAA,UAAU,EAAEjB,WAAW,CAACkB,gBAAZ,CAA6BC,GADc;AAEvDC,cAAAA,aAAa,EAAE,IAFwC;AAGvDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAH+C;AAIvDC,cAAAA,OAAO,EAAE;AAJ8C,aAApC,CADL;;AAAA;AACVC,YAAAA,MADU;;AAQd,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACnBC,cAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAd,cAAAA,QAAQ,CAACR,SAAS,CAAC;AAAC0B,gBAAAA,IAAI,EAAC,KAAN;AAAaC,gBAAAA,OAAO,EAAC;AAACC,kBAAAA,KAAK,EAACN;AAAP;AAArB,eAAD,CAAV,CAAR;AACAf,cAAAA,MAAM,CAACe,MAAM,CAACO,GAAR,CAAN;AACH;;AAZa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAeA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BhB,IAAAA,SAAS;AACZ,GAFD;;AAIA,MAAMiB,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBvB,IAAAA,QAAQ,CAACR,SAAS,CAAC;AAAC0B,MAAAA,IAAI,EAAC,KAAN;AAAaC,MAAAA,OAAO,EAAC;AAACC,QAAAA,KAAK,EAAC;AAAP;AAArB,KAAD,CAAV,CAAR;AACArB,IAAAA,MAAM,CAAC,EAAD,CAAN;AACH,GAHD;;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyB,KAAK,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,KAAK,CAACE,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM5B,GAAG,KAAK,EAAR,GAAa,oBAAC,KAAD;AACX,IAAA,KAAK,EAAE0B,KAAK,CAACG,QADF;AAEX,IAAA,MAAM,EAAE;AAACN,MAAAA,GAAG,EAACvB;AAAL,KAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,GAGG,IAJT,CADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,KAAK,CAACI,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,YADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMN,gBAAgB,EAAtB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMC,KAAK,EAAX;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAPJ,CADJ;AAoBH;AAED,IAAMC,KAAK,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC5BL,EAAAA,SAAS,EAAC;AACNM,IAAAA,IAAI,EAAC;AADC,GADkB;AAI5BH,EAAAA,YAAY,EAAC;AACTI,IAAAA,SAAS,EAAE,EADF;AAETD,IAAAA,IAAI,EAAC,CAFI;AAGTE,IAAAA,aAAa,EAAE,KAHN;AAITC,IAAAA,cAAc,EAAE;AAJP,GAJe;AAU5BR,EAAAA,OAAO,EAAC;AACJK,IAAAA,IAAI,EAAC;AADD,GAVoB;AAa5BJ,EAAAA,QAAQ,EAAC;AACLI,IAAAA,IAAI,EAAC;AADA;AAbmB,CAAlB,CAAd","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport store from '../../store/store';\n\nimport { useDispatch } from 'react-redux';\n\nimport * as ImagePicker from 'expo-image-picker';\n\nimport {\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    Button\n  } from 'react-native';\n\nimport { imgUrlSet } from '../../store/postslice';\n\nexport default function Imagepicker(props){\n\n    const imgUrl = store.getState().post_serie_reducer.imgUrl;\n    const [ Url, setUrl ] = useState(\"\");\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        (async () => {\n        if (Platform.OS !== 'web') {\n            const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n            if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n            }\n        }\n        })();\n    }, []);\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [9, 16],\n        quality: 1,\n        });\n\n        if (!result.cancelled) {\n            console.log(result)\n            dispatch(imgUrlSet({type:'set', payload:{image:result}}));\n            setUrl(result.uri);\n        }\n    };\n\n    const pickImageHandler = () => {\n        pickImage();\n    }\n    \n    const reset = () => {\n        dispatch(imgUrlSet({type:'set', payload:{image:\"\"}}));\n        setUrl(\"\");\n    }\n\n    return(\n        <View style={style.container}>\n            <View style={style.imgView}>\n                { Url !== \"\" ? <Image \n                    style={style.imgStyle}\n                    source={{uri:Url}}\n                /> : null}\n            </View>\n            <View style={style.btnContainer}>\n                <Button  \n                    title=\"pick image\"\n                    onPress={() => pickImageHandler()}\n                />\n                <Button  \n                    title=\"reset\"\n                    onPress={() => reset()}\n                />\n            </View>\n        </View>\n    )\n}\n\nconst style = StyleSheet.create({\n    container:{\n        flex:1\n    },\n    btnContainer:{\n        marginTop: 10,\n        flex:1,\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n    imgView:{\n        flex:8\n    },\n    imgStyle:{\n        flex:1\n    }\n})"]},"metadata":{},"sourceType":"module"}