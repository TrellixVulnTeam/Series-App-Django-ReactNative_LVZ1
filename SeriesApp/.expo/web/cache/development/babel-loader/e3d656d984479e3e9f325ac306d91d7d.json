{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lusk/Documents/projetos/Series App/SeriesApp/src/pages/AddPage.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport FormSerie from \"../components/Forms/FormSerie\";\nimport CreateHeader from \"../components/Headers/CreateHeader\";\nimport APIServices from \"../APIServices/APIServices\";\nimport store from \"../store/store\";\nimport ButtonPostSerie from \"../components/Buttons/ButtonPostSerie\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { imgUrlSet } from \"../store/postslice\";\nimport { setSeries } from \"../store/serieslice\";\nimport { initialStateValue } from \"./LandingPage\";\nimport { UpdateSeries } from \"../components/utils/UpdateSeries\";\nexport default function AddPage(props) {\n  var navigation = props.navigation;\n  var token = store.getState().login_reducer.token;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error_message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var imgUrl = useSelector(function (state) {\n    return state.post_serie_reducer.imgUrl;\n  });\n\n  var Update_series = function Update_series() {\n    UpdateSeries().then(function () {\n      navigation.navigate(\"Landing\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var Post_Serie = function Post_Serie(obj_params) {\n    setLoading(true);\n    APIServices.PostSerie(token.payload, obj_params, imgUrl).then(function (response) {\n      setLoading(false);\n      setError(false);\n      Alert.alert('Success', 'Your Serie was created with success!', [{\n        text: \"Ok\",\n        onPress: function onPress() {\n          Update_series();\n        }\n      }]);\n    }).catch(function (error) {\n      setLoading(false);\n      setError(true);\n      setMessage(error.message);\n      console.log(JSON.stringify(error));\n      Alert.alert(\"error\", \"\" + JSON.stringify(error.response.data), [{\n        text: \"Ok\",\n        onPress: function onPress() {}\n      }]);\n    });\n  };\n\n  var Handler_changes = function Handler_changes(obj_params) {\n    Post_Serie(obj_params);\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    keyboardShouldPersistTaps: 'always',\n    contentContainerStyle: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(CreateHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(FormSerie, {\n    error: error,\n    error_message: error_message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(ButtonPostSerie, {\n    Handler_changes: Handler_changes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n}\nvar style = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    paddingHorizontal: 20\n  }\n});","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/pages/AddPage.js"],"names":["React","useState","KeyboardAwareScrollView","FormSerie","CreateHeader","APIServices","store","ButtonPostSerie","useDispatch","useSelector","imgUrlSet","setSeries","initialStateValue","UpdateSeries","AddPage","props","navigation","token","getState","login_reducer","error","setError","error_message","setMessage","loading","setLoading","imgUrl","state","post_serie_reducer","Update_series","then","navigate","catch","console","log","Post_Serie","obj_params","PostSerie","payload","response","Alert","alert","text","onPress","message","JSON","stringify","data","Handler_changes","style","container","StyleSheet","create","flexGrow","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { View, Text, StyleSheet, Alert } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport FormSerie from '../components/Forms/FormSerie';\nimport CreateHeader from '../components/Headers/CreateHeader';\nimport APIServices from '../APIServices/APIServices';\nimport store from '../store/store';\nimport ButtonPostSerie from '../components/Buttons/ButtonPostSerie';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { imgUrlSet } from '../store/postslice';\nimport { setSeries } from '../store/serieslice';\nimport { initialStateValue } from './LandingPage';\n\nimport {UpdateSeries} from '../components/utils/UpdateSeries'; \n\nexport default function AddPage(props){\n\n    const { navigation } = props;\n    const token = store.getState().login_reducer.token;\n\n    const [ error, setError ] = useState(false);\n    const [ error_message, setMessage ] = useState(\"\");\n    const [ loading, setLoading ] = useState(false);\n\n    const imgUrl = useSelector((state) => state.post_serie_reducer.imgUrl);\n\n    const Update_series = () => {\n        UpdateSeries().then(() => {\n            navigation.navigate(\"Landing\");\n        })\n        .catch(error => {console.log(error)});\n    }\n\n    const Post_Serie = (obj_params) => {\n        setLoading(true);\n        APIServices.PostSerie(token.payload, obj_params, imgUrl)\n        .then(response => {\n            setLoading(false); setError(false);\n            Alert.alert(\n                'Success',\n                'Your Serie was created with success!',\n                [\n                 {\n                    text:\"Ok\",\n                    onPress: () => {Update_series()}\n                 }\n                ]\n            );\n        })\n        .catch(error => {\n            setLoading(false); setError(true); setMessage(error.message);\n            console.log(JSON.stringify(error));\n            Alert.alert(\n                \"error\",\n                `${JSON.stringify(error.response.data)}`,\n               [ {\n                    text:\"Ok\",\n                    onPress: () => {}\n                }]\n            );\n        })\n    }\n\n    const Handler_changes = (obj_params) => {\n        Post_Serie(obj_params);\n    }\n\n    return(\n        <KeyboardAwareScrollView keyboardShouldPersistTaps={'always'} contentContainerStyle={style.container}>\n            <CreateHeader />\n            <FormSerie error={error} error_message={error_message}/>\n            <ButtonPostSerie Handler_changes={Handler_changes}/>\n        </KeyboardAwareScrollView>\n    )\n}\n\nconst style = StyleSheet.create({\n    container:{\n        flexGrow:1,\n        paddingHorizontal:20\n    }\n})"]},"metadata":{},"sourceType":"module"}