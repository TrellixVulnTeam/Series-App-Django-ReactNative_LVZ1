{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport React from 'react';\n\nvar Validators = function Validators() {\n  _classCallCheck(this, Validators);\n};\n\nValidators.Validate_nonEmptyInput = function (inputString) {\n  return inputString === \"\";\n};\n\nValidators.Validate_nonEmptyInputList = function (listInputString) {\n  for (var Input in listInputString) {\n    if (listInputString[Input] === undefined || listInputString[Input] === \"\") {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nValidators.Validate_EmailInput = function (inputEmail) {\n  if (inputEmail.includes(\"@\")) {\n    return true;\n  }\n\n  return false;\n};\n\nValidators.Validate_MatchingPasswordInput = function (inputPass_1, inputPass_2) {\n  if (inputPass_1 === inputPass_2) {\n    return true;\n  }\n\n  return false;\n};\n\nexport { Validators as default };","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/utils/Validators.js"],"names":["React","Validators","Validate_nonEmptyInput","inputString","Validate_nonEmptyInputList","listInputString","Input","undefined","Validate_EmailInput","inputEmail","includes","Validate_MatchingPasswordInput","inputPass_1","inputPass_2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,U;;;;AAAAA,U,CACVC,sB,GAAyB,UAACC,WAAD,EAAiB;AAC7C,SAAOA,WAAW,KAAK,EAAvB;AACH,C;;AAHgBF,U,CAKVG,0B,GAA6B,UAACC,eAAD,EAAqB;AACrD,OAAI,IAAIC,KAAR,IAAiBD,eAAjB,EAAiC;AAC7B,QAAGA,eAAe,CAACC,KAAD,CAAf,KAA2BC,SAA3B,IAAwCF,eAAe,CAACC,KAAD,CAAf,KAA2B,EAAtE,EAAyE;AACrE,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH,C;;AAZgBL,U,CAcVO,mB,GAAsB,UAACC,UAAD,EAAgB;AACzC,MAAGA,UAAU,CAACC,QAAX,CAAoB,GAApB,CAAH,EAA4B;AACxB,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,C;;AAnBgBT,U,CAqBVU,8B,GAAiC,UAACC,WAAD,EAAcC,WAAd,EAA8B;AAClE,MAAKD,WAAW,KAAKC,WAArB,EAAkC;AAC9B,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,C;;SA1BgBZ,U","sourcesContent":["import React from 'react';\n\nexport default class Validators {\n    static Validate_nonEmptyInput = (inputString) => {\n        return inputString === \"\";\n    }\n\n    static Validate_nonEmptyInputList = (listInputString) => {\n        for(var Input in listInputString){\n            if(listInputString[Input] === undefined || listInputString[Input] === \"\"){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    static Validate_EmailInput = (inputEmail) => {\n        if(inputEmail.includes(\"@\")){\n            return true;\n        }\n        return false;\n    }\n\n    static Validate_MatchingPasswordInput = (inputPass_1, inputPass_2) => {\n        if ( inputPass_1 === inputPass_2 ){\n            return true;\n        }\n        return false;\n    }\n}"]},"metadata":{},"sourceType":"module"}