{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/lusk/Documents/projetos/Series App/SeriesApp/src/components/Forms/FormRegister.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { useSharedValue } from 'react-native-reanimated';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { OnchangeUsername, OnchangePassword, OnchangeConfirmPassword, OnchangeEmail } from \"../../store/counterslice\";\nimport Colors_services from \"../../utils/Colors_layout\";\nimport Size_services from \"../../utils/Size_layout\";\nimport Validators from \"../../utils/Validators\";\nimport Warning from \"../utils/Warning\";\n\nvar FormRegister = function FormRegister(props) {\n  var username = useSelector(function (state) {\n    return state.login_reducer.username;\n  });\n  var password = useSelector(function (state) {\n    return state.login_reducer.password;\n  });\n  var email = useSelector(function (state) {\n    return state.login_reducer.email;\n  });\n  var confirm_password = useSelector(function (state) {\n    return state.login_reducer.confirm_password;\n  });\n  var error = props.error,\n      error_message = props.error_message;\n  var dispatch = useDispatch();\n\n  var OnUsernameChange = function OnUsernameChange(value) {\n    dispatch(OnchangeUsername({\n      type: 'username_change',\n      payload: value\n    }));\n  };\n\n  var OnPasswordChange = function OnPasswordChange(value) {\n    dispatch(OnchangePassword({\n      type: 'password_change',\n      payload: value\n    }));\n  };\n\n  var OnConfirmPasswordChange = function OnConfirmPasswordChange(value) {\n    dispatch(OnchangeConfirmPassword({\n      type: 'confirm_password_change',\n      payload: value\n    }));\n  };\n\n  var OnEmailChange = function OnEmailChange(value) {\n    dispatch(OnchangeEmail({\n      type: 'email_change',\n      payload: value\n    }));\n  };\n\n  return React.createElement(View, {\n    style: style.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, error ? React.createElement(Warning, {\n    error_message: error_message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  }) : null, React.createElement(View, {\n    style: style.view_input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Username\"), React.createElement(TextInput, {\n    value: username.payload,\n    onChangeText: function onChangeText(value) {\n      return OnUsernameChange(value);\n    },\n    multiline: true,\n    style: style.textinput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: style.view_input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    value: email.payload,\n    onChangeText: function onChangeText(value) {\n      return OnEmailChange(value);\n    },\n    multiline: true,\n    style: style.textinput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: style.view_input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    placeholder: \"********\",\n    value: password.payload,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(value) {\n      return OnPasswordChange(value);\n    },\n    style: style.textinput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: style.view_input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), React.createElement(TextInput, {\n    placeholder: \"********\",\n    value: confirm_password.payload,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(value) {\n      return OnConfirmPasswordChange(value);\n    },\n    style: style.textinput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })));\n};\n\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-around',\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  view_input: {\n    flex: 1,\n    justifyContent: 'space-around',\n    padding: 5\n  },\n  textinput: {\n    backgroundColor: \"\" + Colors_services.Get_ColorsPack()[\"Cinza_claro\"],\n    padding: 5,\n    borderRadius: 10,\n    minHeight: Size_services.Get_SizePack()[\"layout_form_height\"]\n  },\n  input: {\n    color: \"\" + Colors_services.Get_ColorsPack()[\"Roxo_claro\"],\n    marginBottom: 5\n  }\n});\nexport default FormRegister;","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/components/Forms/FormRegister.js"],"names":["React","TextInput","KeyboardAwareScrollView","useSharedValue","useSelector","useDispatch","OnchangeUsername","OnchangePassword","OnchangeConfirmPassword","OnchangeEmail","Colors_services","Size_services","Validators","Warning","FormRegister","props","username","state","login_reducer","password","email","confirm_password","error","error_message","dispatch","OnUsernameChange","value","type","payload","OnPasswordChange","OnConfirmPasswordChange","OnEmailChange","style","container","view_input","input","textinput","StyleSheet","create","flex","justifyContent","paddingBottom","paddingTop","padding","backgroundColor","Get_ColorsPack","borderRadius","minHeight","Get_SizePack","color","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text} from 'react-native';\nimport { TextInput } from 'react-native-gesture-handler';\n\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { useSharedValue } from 'react-native-reanimated';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { OnchangeUsername, OnchangePassword, OnchangeConfirmPassword, OnchangeEmail } from '../../store/counterslice';\n\nimport Colors_services from '../../utils/Colors_layout';\nimport Size_services from '../../utils/Size_layout';\n\nimport Validators from '../../utils/Validators';\nimport Warning from '../utils/Warning';\n\nconst FormRegister = (props) => {\n    const username = useSelector((state) => state.login_reducer.username);\n    const password = useSelector((state) => state.login_reducer.password);\n    const email = useSelector((state) => state.login_reducer.email);\n    const confirm_password = useSelector((state) => state.login_reducer.confirm_password);\n\n    const { error, error_message } = props;\n\n    const dispatch = useDispatch();\n\n    const OnUsernameChange = (value) => {\n        dispatch(OnchangeUsername({type:'username_change', payload:value}));\n    }\n\n    const OnPasswordChange = (value) => {\n        dispatch(OnchangePassword({type:'password_change', payload:value}));\n    }\n    \n    const OnConfirmPasswordChange = (value) => {\n        dispatch(OnchangeConfirmPassword({type:'confirm_password_change', payload:value}));\n    }\n\n    const OnEmailChange = (value) => {\n        dispatch(OnchangeEmail({type:'email_change', payload:value}));\n    }    \n\n    return(\n            <View style={style.container}>\n                { error ? <Warning  error_message={error_message}/> : null }\n                <View style={style.view_input}>\n                    <Text style={style.input}>Username</Text>\n                    <TextInput\n                        value={username.payload}\n                        onChangeText={(value) => OnUsernameChange(value)}\n                        multiline={true}\n                        style={style.textinput}\n                    />\n                </View>\n                <View style={style.view_input}>\n                    <Text style={style.input}>Email</Text>\n                    <TextInput\n                        value={email.payload}\n                        onChangeText={(value) => OnEmailChange(value)}\n                        multiline={true}\n                        style={style.textinput}\n                    />\n                </View>\n                <View style={style.view_input}>\n                    <Text style={style.input}>Password</Text>\n                    <TextInput\n                        placeholder=\"********\"\n                        value={password.payload}\n                        secureTextEntry={true}\n                        onChangeText={(value) => OnPasswordChange(value)}\n                        style={style.textinput}\n                    />\n                </View>\n                <View style={style.view_input}>\n                    <Text style={style.input}>Confirm Password</Text>\n                    <TextInput\n                        placeholder=\"********\"\n                        value={confirm_password.payload}\n                        secureTextEntry={true}\n                        onChangeText={(value) => OnConfirmPasswordChange(value)}\n                        style={style.textinput}\n                    />\n                </View>\n            </View>\n    );\n}\n\nconst style = StyleSheet.create({\n    container:{\n        flex: 1,\n        justifyContent: 'space-around',\n        paddingBottom: 10,\n        paddingTop: 10\n    },\n    view_input:{\n        flex:1,\n        justifyContent: 'space-around',\n        padding:5,\n    },\n    textinput:{\n        backgroundColor: `${Colors_services.Get_ColorsPack()[\"Cinza_claro\"]}`,\n        padding:5,\n        borderRadius: 10,\n        minHeight: Size_services.Get_SizePack()[\"layout_form_height\"]\n    },\n    input:{\n        color: `${Colors_services.Get_ColorsPack()[\"Roxo_claro\"]}`,\n        marginBottom: 5\n    }\n})\n\nexport default FormRegister;"]},"metadata":{},"sourceType":"module"}