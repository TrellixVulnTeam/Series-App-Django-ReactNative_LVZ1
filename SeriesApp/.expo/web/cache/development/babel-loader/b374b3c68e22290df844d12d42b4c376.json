{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var reducersPayload = createSlice({\n  name: 'reducers',\n  initialState: {\n    username: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    email: \"\",\n    token: null,\n    new_app: null\n  },\n  reducers: {\n    OnchangeUsername: function OnchangeUsername(state, action) {\n      state.username = action.payload;\n    },\n    OnchangePassword: function OnchangePassword(state, action) {\n      state.password = action.payload;\n    },\n    OnchangeConfirmPassword: function OnchangeConfirmPassword(state, action) {\n      state.confirm_password = action.payload;\n    },\n    OnchangeEmail: function OnchangeEmail(state, action) {\n      state.email = action.payload;\n    },\n    TokenSet: function TokenSet(state, action) {\n      state.token = action.payload;\n    },\n    NewAppSet: function NewAppSet(state, action) {\n      state.new_app = action.payload;\n    }\n  }\n});\nvar _reducersPayload$acti = reducersPayload.actions,\n    OnchangeUsername = _reducersPayload$acti.OnchangeUsername,\n    OnchangePassword = _reducersPayload$acti.OnchangePassword,\n    OnchangeConfirmPassword = _reducersPayload$acti.OnchangeConfirmPassword,\n    OnchangeEmail = _reducersPayload$acti.OnchangeEmail,\n    TokenSet = _reducersPayload$acti.TokenSet,\n    NewAppSet = _reducersPayload$acti.NewAppSet;\nexport { OnchangeUsername, OnchangePassword, OnchangeConfirmPassword, OnchangeEmail, TokenSet, NewAppSet };\nexport default reducersPayload.reducer;","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/store/counterslice.js"],"names":["createSlice","reducersPayload","name","initialState","username","password","confirm_password","email","token","new_app","reducers","OnchangeUsername","state","action","payload","OnchangePassword","OnchangeConfirmPassword","OnchangeEmail","TokenSet","NewAppSet","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,eAAe,GAAGD,WAAW,CAAC;AACvCE,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,QAAQ,EAAC,EAFG;AAGZC,IAAAA,gBAAgB,EAAC,EAHL;AAIZC,IAAAA,KAAK,EAAC,EAJM;AAKZC,IAAAA,KAAK,EAAC,IALM;AAMZC,IAAAA,OAAO,EAAC;AANI,GAFyB;AAUvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,EAAE,0BAACC,KAAD,EAAQC,MAAR,EAAmB;AACnCD,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;AACD,KAHO;AAIRC,IAAAA,gBAAgB,EAAE,0BAACH,KAAD,EAAQC,MAAR,EAAmB;AACnCD,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;AACD,KANO;AAORE,IAAAA,uBAAuB,EAAE,iCAACJ,KAAD,EAAQC,MAAR,EAAmB;AAC1CD,MAAAA,KAAK,CAACN,gBAAN,GAAyBO,MAAM,CAACC,OAAhC;AACD,KATO;AAURG,IAAAA,aAAa,EAAE,uBAACL,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;AACD,KAZO;AAaRI,IAAAA,QAAQ,EAAE,kBAACN,KAAD,EAAQC,MAAR,EAAmB;AAC3BD,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACC,OAArB;AACD,KAfO;AAgBRK,IAAAA,SAAS,EAAE,mBAACP,KAAD,EAAQC,MAAR,EAAmB;AAC5BD,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACC,OAAvB;AACD;AAlBO;AAV6B,CAAD,CAAnC;AAiCA,4BAA4Gb,eAAe,CAACmB,OAA5H;AAAA,IAAQT,gBAAR,yBAAQA,gBAAR;AAAA,IAA0BI,gBAA1B,yBAA0BA,gBAA1B;AAAA,IAA4CC,uBAA5C,yBAA4CA,uBAA5C;AAAA,IAAqEC,aAArE,yBAAqEA,aAArE;AAAA,IAAoFC,QAApF,yBAAoFA,QAApF;AAAA,IAA8FC,SAA9F,yBAA8FA,SAA9F;;AAEP,eAAelB,eAAe,CAACoB,OAA/B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const reducersPayload = createSlice({\n    name: 'reducers',\n    initialState: {\n      username: \"\",\n      password:\"\",\n      confirm_password:\"\",\n      email:\"\",\n      token:null,\n      new_app:null\n    },\n    reducers: {\n      OnchangeUsername: (state, action) => {\n        state.username = action.payload;\n      },\n      OnchangePassword: (state, action) => {\n        state.password = action.payload;\n      },\n      OnchangeConfirmPassword: (state, action) => {\n        state.confirm_password = action.payload;\n      },\n      OnchangeEmail: (state, action) => {\n        state.email = action.payload;\n      },\n      TokenSet: (state, action) => {\n        state.token = action.payload;\n      },\n      NewAppSet: (state, action) => {\n        state.new_app = action.payload;\n      }\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { OnchangeUsername, OnchangePassword, OnchangeConfirmPassword, OnchangeEmail, TokenSet, NewAppSet } = reducersPayload.actions;\n\nexport default reducersPayload.reducer;\n"]},"metadata":{},"sourceType":"module"}