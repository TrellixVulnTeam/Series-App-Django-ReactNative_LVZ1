{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/lusk/Documents/projetos/Series App/SeriesApp/src/pages/LandingPage.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useState, useEffect } from 'react';\nimport Colors_services from \"../utils/Colors_layout\";\nimport APIServices from \"../APIServices/APIServices\";\nimport store from \"../store/store\";\nimport Warning from \"../components/utils/Warning\";\nimport ListSeries from \"../components/Grid/ListSeries\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSeries } from \"../store/serieslice\";\nexport var load_per_scroll = 10;\nexport var initialStateValue = 15;\nexport var Get_series = function Get_series() {\n  setLoading(true);\n  APIServices.ListSeries_page(token, 0, initialStateValue).then(function (response) {\n    dispatch(setSeries({\n      type: 'set',\n      payload: response.data\n    }));\n    setLoading(false);\n    setError(false);\n  }).catch(function (error) {\n    setLoading(false);\n    setError(true);\n    setMessage(error.message);\n  });\n};\n\nvar LandingPage = function LandingPage(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error_message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var newSerie = store.getState().login_reducer.new_app;\n  var token = store.getState().login_reducer.token;\n  var series = useSelector(function (state) {\n    return state.series.series;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    Get_series();\n  }, []);\n  useEffect(function () {\n    Add_NewSerie();\n  }, [newSerie]);\n\n  var Add_NewSerie = function Add_NewSerie() {\n    var series = [].concat(series, [newSerie]);\n    dispatch(setSeries({\n      type: 'set',\n      payload: series\n    }));\n  };\n\n  var Is_Loading = function Is_Loading() {\n    if (loading) {\n      return React.createElement(View, {\n        style: style.containerLoading,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: Colors_services.Get_ColorsPack()[\"Roxo_escuro\"],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n\n  var Add_series = function Add_series() {\n    APIServices.ListSeries_page(token, series.length, series.length + load_per_scroll).then(function (response) {\n      dispatch(setSeries({\n        type: 'set',\n        payload: [].concat(_toConsumableArray(series), _toConsumableArray(response.data))\n      }));\n      setError(false);\n    }).catch(function (error) {\n      setError(true);\n      setMessage(error.response.data);\n    });\n  };\n\n  var Get_series = function Get_series() {\n    setLoading(true);\n    APIServices.ListSeries_page(token, 0, initialStateValue).then(function (response) {\n      dispatch(setSeries({\n        type: 'set',\n        payload: response.data\n      }));\n      setLoading(false);\n      setError(false);\n    }).catch(function (error) {\n      setLoading(false);\n      setError(true);\n      setMessage(error.message);\n    });\n  };\n\n  var Handle_changes = function Handle_changes() {\n    Is_Loading();\n\n    if (error) {\n      return React.createElement(Warning, {\n        error_message: error_message,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return React.createElement(ListSeries, {\n      series: series,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: style.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, Handle_changes());\n};\n\nvar style = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerLoading: {\n    flex: 1\n  }\n});\nexport default LandingPage;","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/pages/LandingPage.js"],"names":["React","useState","useEffect","Colors_services","APIServices","store","Warning","ListSeries","useDispatch","useSelector","setSeries","load_per_scroll","initialStateValue","Get_series","setLoading","ListSeries_page","token","then","response","dispatch","type","payload","data","setError","catch","error","setMessage","message","LandingPage","props","loading","error_message","newSerie","getState","login_reducer","new_app","series","state","Add_NewSerie","Is_Loading","style","containerLoading","Get_ColorsPack","Add_series","length","Handle_changes","container","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ActivityIndicator } from 'react-native';\n\nimport { useState, useEffect } from 'react';\nimport Colors_services from '../utils/Colors_layout';\n\nimport APIServices from '../APIServices/APIServices';\n\nimport store from '../store/store';\nimport Warning from '../components/utils/Warning';\nimport ListSeries from '../components/Grid/ListSeries';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSeries } from '../store/serieslice';\n\nexport const load_per_scroll = 10;\nexport const initialStateValue = 15;\n\nexport const Get_series = () => {\n    setLoading(true);\n    APIServices.ListSeries_page(token, 0, initialStateValue)\n    .then(response => {\n        dispatch(setSeries({type:'set',payload:response.data}));\n        setLoading(false); setError(false);\n    })\n    .catch(error => {\n        setLoading(false); setError(true);\n        setMessage(error.message);\n    });\n}\n\nconst LandingPage = (props) => {\n    const [ loading, setLoading ] = useState(false);\n    const [ error, setError ] = useState(false);\n    const [ error_message, setMessage ] = useState(\"\");\n\n    const newSerie = store.getState().login_reducer.new_app;\n    const token = store.getState().login_reducer.token;\n\n    const series = useSelector((state) => state.series.series);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        Get_series();\n    }, [])\n\n    useEffect(() => {\n        Add_NewSerie()\n    },[newSerie])\n    \n    const Add_NewSerie = () => {\n        const series = [...series, newSerie];\n        dispatch(setSeries({type:'set',payload:series}));\n    }\n\n    const Is_Loading = () => {\n        if (loading){\n            return (\n                <View style={style.containerLoading}>\n                    <ActivityIndicator size=\"large\" color={Colors_services.Get_ColorsPack()[\"Roxo_escuro\"]} />\n                </View>\n            )\n        }\n    }\n\n    const Add_series = () => {\n        APIServices.ListSeries_page(token, series.length, (series.length + load_per_scroll))\n        .then(response => { \n            dispatch(setSeries({type:'set',payload:[...series, ...response.data]}));\n            setError(false);\n        })\n        .catch(error => {\n            setError(true);\n            setMessage(error.response.data);\n        });\n    }\n\n    const Get_series = () => {\n        setLoading(true);\n        APIServices.ListSeries_page(token, 0, initialStateValue)\n        .then(response => {\n            dispatch(setSeries({type:'set',payload:response.data}));\n            setLoading(false); setError(false);\n        })\n        .catch(error => {\n            setLoading(false); setError(true);\n            setMessage(error.message);\n        });\n    }\n\n    const Handle_changes = () => {\n        Is_Loading();\n\n        if (error){\n            return (\n                <Warning error_message={error_message} /> \n            )\n        }\n        return (\n            <ListSeries series={series} />\n        )\n    }\n    \n    return (\n        <View style={style.container}>\n            {Handle_changes()}\n        </View>\n    )\n}\n\nconst style = StyleSheet.create({\n    container:{\n        flex:1\n    },\n    containerLoading:{\n        flex:1\n    }\n})\n\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}