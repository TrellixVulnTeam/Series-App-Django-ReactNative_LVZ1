{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/lusk/Documents/projetos/Series App/SeriesApp/src/pages/LandingPage.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useState, useEffect } from 'react';\nimport Colors_services from \"../utils/Colors_layout\";\nimport APIServices from \"../APIServices/APIServices\";\nimport store from \"../store/store\";\nimport Warning from \"../components/utils/Warning\";\nimport ListSeries from \"../components/Grid/ListSeries\";\nvar load_per_scroll = 10;\n\nvar LandingPage = function LandingPage(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      series = _useState2[0],\n      setSeries = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(15),\n      _useState6 = _slicedToArray(_useState5, 2),\n      initialStateValue = _useState6[0],\n      setStateValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error_message = _useState10[0],\n      setMessage = _useState10[1];\n\n  var newSerie = store.getState().login_reducer.new_app;\n  var token = store.getState().login_reducer.token;\n  useEffect(function () {\n    Get_series();\n  }, []);\n  useEffect(function () {\n    Add_NewSerie();\n  }, [newSerie]);\n\n  var Add_NewSerie = function Add_NewSerie() {\n    var series = [].concat(series, [newSerie]);\n    setSeries(series);\n  };\n\n  var Is_Loading = function Is_Loading() {\n    if (loading) {\n      return React.createElement(View, {\n        style: style.containerLoading,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: Colors_services.Get_ColorsPack()[\"Roxo_escuro\"],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n\n  var Add_series = function Add_series() {\n    APIServices.ListSeries_page(token, series.length, series.length + load_per_scroll).then(function (response) {\n      setSeries([].concat(_toConsumableArray(series), _toConsumableArray(response.data)));\n      setError(false);\n    }).catch(function (error) {\n      setError(true);\n      setMessage(error.response.data);\n    });\n  };\n\n  var Get_series = function Get_series() {\n    setLoading(true);\n    APIServices.ListSeries_page(token, 0, initialStateValue).then(function (response) {\n      setSeries(response.data);\n      setLoading(false);\n      setError(false);\n    }).catch(function (error) {\n      setLoading(false);\n      setError(true);\n      setMessage(error.message);\n    });\n  };\n\n  var Handle_changes = function Handle_changes() {\n    Is_Loading();\n\n    if (error) {\n      return React.createElement(Warning, {\n        error_message: error_message,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return React.createElement(ListSeries, {\n      series: series,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: style.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, Handle_changes());\n};\n\nvar style = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerLoading: {\n    flex: 1\n  }\n});\nexport default LandingPage;","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/pages/LandingPage.js"],"names":["React","useState","useEffect","Colors_services","APIServices","store","Warning","ListSeries","load_per_scroll","LandingPage","props","series","setSeries","loading","setLoading","initialStateValue","setStateValue","error","setError","error_message","setMessage","newSerie","getState","login_reducer","new_app","token","Get_series","Add_NewSerie","Is_Loading","style","containerLoading","Get_ColorsPack","Add_series","ListSeries_page","length","then","response","data","catch","message","Handle_changes","container","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ActivityIndicator } from 'react-native';\n\nimport { useState, useEffect } from 'react';\nimport Colors_services from '../utils/Colors_layout';\n\nimport APIServices from '../APIServices/APIServices';\n\nimport store from '../store/store';\nimport Warning from '../components/utils/Warning';\nimport ListSeries from '../components/Grid/ListSeries';\n\nconst load_per_scroll = 10;\n\nconst LandingPage = (props) => {\n    const [ series, setSeries ] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    const [ initialStateValue, setStateValue ] = useState(15);\n    const [ error, setError ] = useState(false);\n    const [ error_message, setMessage ] = useState(\"\");\n\n    const newSerie = store.getState().login_reducer.new_app;\n    const token = store.getState().login_reducer.token;\n\n    useEffect(() => {\n        Get_series();\n    }, [])\n    \n    useEffect(() => {\n        Add_NewSerie()\n    },[newSerie])\n\n    const Add_NewSerie = () => {\n        const series = [...series, newSerie];\n        setSeries(series);\n    }\n\n    const Is_Loading = () => {\n        if (loading){\n            return (\n                <View style={style.containerLoading}>\n                    <ActivityIndicator size=\"large\" color={Colors_services.Get_ColorsPack()[\"Roxo_escuro\"]} />\n                </View>\n            )\n        }\n    }\n\n    const Add_series = () => {\n        APIServices.ListSeries_page(token, series.length, (series.length + load_per_scroll))\n        .then(response => { \n            setSeries([...series, ...response.data]);\n            setError(false);\n        })\n        .catch(error => {\n            setError(true);\n            setMessage(error.response.data);\n        });\n    }\n\n    const Get_series = () => {\n        setLoading(true);\n        APIServices.ListSeries_page(token, 0, initialStateValue)\n        .then(response => {\n            setSeries(response.data);\n            setLoading(false); setError(false);\n        })\n        .catch(error => {\n            setLoading(false); setError(true);\n            setMessage(error.message);\n        });\n    }\n\n    const Handle_changes = () => {\n        Is_Loading();\n\n        if (error){\n            return (\n                <Warning error_message={error_message} /> \n            )\n        }\n\n        return (\n            <ListSeries series={series} />\n        )\n    }\n\n    return (\n        <View style={style.container}>\n            {Handle_changes()}\n        </View>\n    )\n}\n\nconst style = StyleSheet.create({\n    container:{\n        flex:1\n    },\n    containerLoading:{\n        flex:1\n    }\n})\n\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}