{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lusk/Documents/projetos/Series App/SeriesApp/src/components/Inputs/IntegerInput.js\";\nimport React, { useState } from 'react';\nimport store from \"../../store/store\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Colors_services from \"../../utils/Colors_layout\";\nimport { useDispatch } from 'react-redux';\nimport { noteSet } from \"../../store/postslice\";\nexport default function IntegerInput(props) {\n  var note = store.getState().post_serie_reducer.note;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      noteState = _useState2[0],\n      setNote = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var addNote = function addNote(action) {\n    {\n      action.type === 'decrease' ? noteState > 0 ? setNote(noteState - action.payload) : null : noteState < 10 ? setNote(noteState + action.payload) : null;\n    }\n    dispatch(noteSet({\n      type: 'set',\n      payload: noteState\n    }));\n  };\n\n  return React.createElement(View, {\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: style.btnContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"-\",\n    onPress: function onPress() {\n      return addNote({\n        type: 'decrease',\n        payload: 1\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: style.numberContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, noteState)), React.createElement(View, {\n    style: style.btnContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"+\",\n    onPress: function onPress() {\n      return addNote({\n        type: 'increase',\n        payload: 1\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })));\n}\nvar style = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    paddingRight: 30\n  },\n  numberContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: Colors_services.Get_ColorsPack()[\"Cinza_claro\"]\n  },\n  btnContainer: {\n    flex: 2\n  }\n});","map":{"version":3,"sources":["/home/lusk/Documents/projetos/Series App/SeriesApp/src/components/Inputs/IntegerInput.js"],"names":["React","useState","store","Colors_services","useDispatch","noteSet","IntegerInput","props","note","getState","post_serie_reducer","noteState","setNote","dispatch","addNote","action","type","payload","style","container","btnContainer","numberContainer","fontSize","StyleSheet","create","flexDirection","justifyContent","paddingRight","flex","alignItems","backgroundColor","Get_ColorsPack"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport store from '../../store/store';\n\nimport { View, Text, StyleSheet, Button } from 'react-native';\nimport Colors_services from '../../utils/Colors_layout';\nimport { useDispatch } from 'react-redux';\nimport { noteSet } from '../../store/postslice';\n\nexport default function IntegerInput(props){\n\n    const note = store.getState().post_serie_reducer.note; \n    const [ noteState, setNote ] = useState(0);\n\n    const dispatch = useDispatch();\n\n    const addNote = (action) => {\n        { action.type === 'decrease' ? ( noteState > 0 ? setNote(noteState - action.payload) : null ) :\n        ( noteState < 10 ? setNote(noteState + action.payload) : null ) }\n\n        dispatch(noteSet({type:'set',payload:noteState}));\n    }\n\n    return(\n        <View style={style.container}>\n            <View style={style.btnContainer}>\n                <Button \n                    title=\"-\"\n                    onPress={() => addNote({type:'decrease', payload:1})}\n                />\n            </View>\n            <View style={style.numberContainer}>\n                <Text style={{fontSize:25}}>\n                    {noteState}\n                </Text>\n            </View>\n            <View style={style.btnContainer}>\n                <Button \n                    title=\"+\"\n                    onPress={() => addNote({type:'increase', payload:1})}\n                />\n            </View>\n        </View>\n    )\n}\n\nconst style = StyleSheet.create({\n    container:{\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        paddingRight: 30\n    },\n    numberContainer:{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems:'center',\n        backgroundColor: Colors_services.Get_ColorsPack()[\"Cinza_claro\"]\n    },\n    btnContainer:{\n        flex:2\n    },\n})"]},"metadata":{},"sourceType":"module"}